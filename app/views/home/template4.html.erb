<main class="mdl-layout__content">
  <div class="site-content">
    <div class="container">

      <section class="section--center mdl-grid site-max-width">
        <header class="section__play-btn mdl-cell mdl-cell--5-col-desktop mdl-cell--3-col-tablet mdl-cell--4-col-phone mdl-shadow--4dp">
          <div class="col s12 m7 center-align">
            <h4 class="header" id="header">Where is there?</h4>

            <div class="card">
              <div class="card-image">
                <!-- 지도 -->
                <div id="map"></div>

              </div>
              <div class="card-stacked">
                <div class="card-content">
                  <p>Address</p>
                </div>
                <div class="card-action">
                  <a href="#">Link</a>
                </div>
              </div>
            </div>
          </div>
        </header>
        <div class="mdl-card mdl-cell mdl-cell--7-col-desktop mdl-cell--5-col-tablet mdl-cell--4-col-phone  mdl-shadow--4dp">
          <!--장소목록 이부분 수정시 자바 스크립트도 고쳐줘야함-->
          <div class="row center-align">
            <form class="col s12">

              <!--제목 입력 창-->
              <input type="text" id="title" placeholder="title">

              <ul class="searches" id="sortable">
                <!--첫번째 검색창-->
                <li>
                  <div class="row valign-wrapper">
                    <div class="input-field col s12">
                      <textarea id="pac-input" class="materialize-textarea" data-length="120" onkeydown="return enter(event)"></textarea>
                      <label for="pac-input">Course</label>
                    </div>
                    <div class="fixed-action-btn horizontal">
                      <a class="btn-floating btn-tiny right blue lighten-2">
                        <i class="small material-icons">mode_edit</i>
                      </a>
                      <ul>
                        <li><a class="btn-floating center-align">Edit</a></li>
                        <li><a class="btn-floating center-align delbtn">Delete</a></li>
                      </ul>
                    </div>
                  </div>
                  <!--전송 정보-->
                  <input type="hidden" class="p_id">
                  <input type="hidden" class="p_name">
                </li>

              </ul>
              <a id="addbtn" class="btn-floating btn-small waves-effect waves-light blue lighten-2"><i class="material-icons">add</i></a>
            </form>

          </div>
        </div>

      </section>

      <section class="section--center mdl-grid site-max-width center-align">
        <div class=" mdl-cell mdl-cell--12-col-desktop mdl-cell--12-col-tablet mdl-cell--12-col-phone" id="preivew">Preview your course</div>

        <div class="mdl-card mdl-cell mdl-cell--12-col-desktop mdl-cell--12-col-tablet mdl-cell--12-col-phone  mdl-shadow--4dp">
          <div class="row center-align">
            <form class="col s12">
              <div class="col s3"></div>
            </form>
          </div>
        </div>

      </section>




      <section class="section--center mdl-grid site-max-width homepage-portfolio">
        <!-- a->input 으로 수정 -->
        <input  type="button" id="save" class="mdl-button mdl-button--raised mdl-js-button mdl-js-ripple-effect mdl-button--accent blue lighten-2" value="Push your hang-out course">
      </section>

    </div>
  </div>
  <footer class="mdl-mini-footer blue-text text-darken-2 white">
    <div class="footer-container blue-text text-darken-2">
      <div class="mdl-logo blue-text text-darken-2">&copy; Unitiled. Design: <a href="https://templateflip.com/" target="_blank" class="blue-text text-darken-2">TemplateFlip</a></div>
      <ul class="mdl-mini-footer__link-list blue-text text-darken-2">
        <li><a href="#">Privacy & Terms</a></li>
      </ul>
    </div>
  </footer>
</main>

</div>

<style>


  .fixed-action-btn {
    position: relative;

  }

  .fixed-action-btn.horizontal {
    padding: 50px 0 0 15px;
  }

  .fixed-action-btn.horizontal ul li {

    margin: 50px 15px 0 0;
  }
  .mdl-cell--5-col-desktop.mdl-cell--5-col-desktop {
    padding: 15px;
  }
  .mdl-cell--7-col-desktop.mdl-cell--7-col-desktop {
    padding: 15px;
  }
  .card .card-action a:not(.btn):not(.btn-large):not(.btn-large):not(.btn-floating) {
    margin-right: 0px;
  }

  .btn-floating.center-align {
    font-size:12px;
  }

  #preivew {
    font-size:2rem;
  }

  #header{
    font-size:2rem;
  }

  .site-navigation-row .mdl-navigation {

    background-color: rgba(0,0,0,0);
  }
  .mdl-layout__header{
    background-color: white;
  }
  .mdl-layout__header-row{
    background-color: white;
  }

  /*지도 height 없으면 지도 사라짐*/
  #map {
    height: 50%;
    width: 50%;
    border: solid 1px;
    min-height: 300px;
    min-width: 300px;
  }
</style>

<script>
    $(document).ready(function(){
        $('.slider').slider();
    });

    // wongeun
    var map;
    var markers = [];
    var autocompletes = [];
    var search_count = 1;

    function initMap() {
        map = new google.maps.Map(document.getElementById('map'), {
            center: {lat: 37.449610, lng: 126.653084},
            zoom: 16
        });

        var this_li = $("#pac-input").parent().parent().parent();

        var input = /** @type {!HTMLInputElement} */(
            document.getElementById('pac-input'));

        //지도안에 검색창 집어넣기 map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

        var autocomplete = new google.maps.places.Autocomplete(input);
        autocomplete.bindTo('bounds', map);
        autocompletes.push(autocomplete);

        var infowindow = new google.maps.InfoWindow();

        //마커 생성
        var marker = new google.maps.Marker({
            map: map
        });
        marker.setVisible(false);
        markers.push(marker);

        autocomplete.addListener('place_changed', function () {
            var this_p_id = this_li.children(".p_id");
            var this_p_name = this_li.children(".p_name");

            infowindow.close();
            var place = autocomplete.getPlace();
            if (!place.geometry) {
                // User entered the name of a Place that was not suggested and
                // pressed the Enter key, or the Place Details request failed.
                window.alert("No details available for input: '" + place.name + "'");
                return;
            }
            this_p_id.val(place.place_id);
            this_p_name.val(place.name);

            // If the place has a geometry, then present it on a map.
            if (place.geometry.viewport) {
                map.fitBounds(place.geometry.viewport);
            } else {
                map.setCenter(place.geometry.location);
                map.setZoom(17);  // Why 17? Because it looks good.
            }

            //마커 아이콘지정, 좌표 설정
            marker.setIcon(/** @type {google.maps.Icon} */({
                url: place.icon,
                size: new google.maps.Size(71, 71),
                origin: new google.maps.Point(0, 0),
                anchor: new google.maps.Point(17, 34),
                scaledSize: new google.maps.Size(35, 35)
            }));
            marker.setPosition(place.geometry.location);
            marker.setVisible(true);


            var photos = place.photos;

            for(var i=0; i<photos.length; i++){
                $(".carousel").append('<a class="carousel-item" href="#one!">' +
                    '<img src='+ photos[i].getUrl({'maxWidth': 200, 'maxHeight': 200})+'>' +
                    '</a>');
            }

            $('.carousel').carousel();

            var address = '';
            if (place.address_components) {
                address = [
                    (place.address_components[0] && place.address_components[0].short_name || ''),
                    (place.address_components[1] && place.address_components[1].short_name || ''),
                    (place.address_components[2] && place.address_components[2].short_name || '')
                ].join(' ');
            }

            //정보 표시
            infowindow.setContent('<div><strong>' + place.name + '</strong><br>' + address);
            infowindow.open(map, marker);
        });
    }

    //검색창 추가
    $(document).on('click', '#addbtn', (function () {
        var btn_id = "pac-input" + search_count;
        search_count++;
        $('.searches').append(
            '<li>' +
            '<div class="row valign-wrapper">' +
            '<div class="input-field col s12">' +
            '<textarea id="' + btn_id + '" class="materialize-textarea" data-length="120" onkeydown="return enter(event)"></textarea>' +
            '<label for="pac-input1">Course</label>' +
            '</div>' +
            '<div class="fixed-action-btn horizontal">' +
            '<a class="btn-floating btn-tiny right blue lighten-2">' +
            '<i class="small material-icons">mode_edit</i>' +
            '</a>' +
            '<ul>' +
            '<li><a class="btn-floating center-align">Edit</a></li>' +
            '<li><a class="btn-floating center-align delbtn">Delete</a></li>' +
            '</ul>' +
            '</div>' +
            '</div>' +
            '<input type="hidden" class="p_id">' +
            '<input type="hidden" class="p_name">' +
            '</li>'
        );

        var for_select = '#'+btn_id;
        var this_li = $(for_select).parent().parent().parent();

        var input = /** @type {!HTMLInputElement} */(
            document.getElementById(btn_id));

        //지도안에 검색창 집어넣기 map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

        var autocomplete = new google.maps.places.Autocomplete(input);
        autocomplete.bindTo('bounds', map);
        autocompletes.push(autocomplete);

        var infowindow = new google.maps.InfoWindow();

        //마커 생성
        var marker = new google.maps.Marker({
            map: map
        });
        marker.setVisible(false);
        markers.push(marker);

        autocomplete.addListener('place_changed', function () {
            var this_p_id = this_li.children(".p_id");
            var this_p_name = this_li.children(".p_name");

            infowindow.close();
            var place = autocomplete.getPlace();
            if (!place.geometry) {
                // User entered the name of a Place that was not suggested and
                // pressed the Enter key, or the Place Details request failed.
                window.alert("No details available for input: '" + place.name + "'");
                return;
            }

            this_p_id.val(place.place_id);
            this_p_name.val(place.name);

            // If the place has a geometry, then present it on a map.
            if (place.geometry.viewport) {
                map.fitBounds(place.geometry.viewport);
            } else {
                map.setCenter(place.geometry.location);
                map.setZoom(17);  // Why 17? Because it looks good.
            }

            //마커 아이콘 생성 및 좌표 설정
            marker.setIcon(/** @type {google.maps.Icon} */({
                url: place.icon,
                size: new google.maps.Size(71, 71),
                origin: new google.maps.Point(0, 0),
                anchor: new google.maps.Point(17, 34),
                scaledSize: new google.maps.Size(35, 35)
            }));
            marker.setPosition(place.geometry.location);  //이부분 때문에 정보창이 약간 옆으로 밀리는 듯
            marker.setVisible(true);

            var address = '';
            if (place.address_components) {
                address = [
                    (place.address_components[0] && place.address_components[0].short_name || ''),
                    (place.address_components[1] && place.address_components[1].short_name || ''),
                    (place.address_components[2] && place.address_components[2].short_name || '')
                ].join(' ');
            }

            //정보 표시
            infowindow.setContent('<div><strong>' + place.name + '</strong><br>' + address);
            infowindow.open(map, marker);
        });
    }));

    //검색창 삭제
    $(document).on('click', '.delbtn', function () {
        var index = $(this).parent().parent().parent().parent().index();
        //마커가 있으면
        if (markers[index] != undefined) {
            markers[index].setMap(null);
            markers.splice(index, 1);
            autocompletes.splice(index,1);
        }
        $(this).parent().parent().parent().parent().remove();
    });

    //enter 처리
    function enter(e){
        if (window.event) {
            key = window.event.keyCode;
        } else if (e) {
            key = e.which;
        }
        if(key == 13){
            return false
        }
    }

    //저장
    $(document).on('click', '#save', function () {
        var place_ids = "";
        var place_names ="";
        var title = $("#title").val();
        var ids = $(".p_id");
        var names = $(".p_name");
        var length = ids.length;
        for(var i=0; i< length;i++) {
            place_ids += ids[i].value+",";
            place_names += names[i].value+",";
        }
        sendPost('create_course', title ,place_ids, place_names)
    });

    //post 전송
    function sendPost(url , title, p_id, p_name){

        var form=document.createElement("form");
        form.name='tempPost';
        form.method='post';
        form.action=url;
        document.body.appendChild(form);

        var input=document.createElement("input");
        input.type="hidden";
        input.name='title';
        input.value = title;
        //input.value= jQuery.JSONToString(object);
        $(form).append(input);
        $('#body').append(form);

        var input=document.createElement("input");
        input.type="hidden";
        input.name='place_ids';
        input.value = p_id;
        //input.value= jQuery.JSONToString(object);
        $(form).append(input);
        $('#body').append(form);

        var input=document.createElement("input");
        input.type="hidden";
        input.name='place_names';
        input.value = p_name;
        //input.value= jQuery.JSONToString(object);
        $(form).append(input);
        $('#body').append(form);

        form.submit();
    }

    //divtag 옮기기
    $( function() {
        $("#sortable").sortable();
        $("#sortable").disableSelection();
    } );
</script>
<!--지도 api사용하기위한 코드-->
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyARFVHKNuUhIbya3S0o0ieuYUI0q5OHz_I&libraries=places&callback=initMap" async defer></script>
